<?php
namespace Phossa\Logger\Decorator;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2015-10-29 at 06:12:50.
 */
class InterpolateDecoratorTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var InterpolateDecorator
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new InterpolateDecorator;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }
    /**
     * @covers Phossa\Logger\Decorator\InterpolateDecorator::stopDecorator
     */
    public function testStopDecorator()
    {
        $this->object->stopDecorator();
        $this->assertTrue($this->object->isDecoratorStopped());
        $this->object->stopDecorator(false);
        $this->assertFalse($this->object->isDecoratorStopped());
    }

    /**
     * @covers Phossa\Logger\Decorator\InterpolateDecorator::isDecoratorStopped
     */
    public function testIsDecoratorStopped()
    {
        $this->assertFalse($this->object->isDecoratorStopped());
        $this->object->stopDecorator();
        $this->assertTrue($this->object->isDecoratorStopped());
    }

    /**
     * @covers Phossa\Logger\Decorator\InterpolateDecorator::__invoke
     */
    public function testInvokeScalar()
    {
        $log = new \Phossa\Logger\LogEntry(
            \Phossa\Logger\LogLevel::INFO,
            '{test} {bingo}',
            array('bingo' => '{bingo2}')
        );
        call_user_func($this->object, $log);
        $this->assertEquals('{test} {bingo2}', $log->getMessage());

        $log->setContext('bingo2', 2);
        call_user_func($this->object, $log);
        $this->assertEquals('{test} 2', $log->getMessage());

        $log->setContext('test', true);
        call_user_func($this->object, $log);
        $this->assertEquals('1 2', $log->getMessage());
    }

    /**
     * @covers Phossa\Logger\Decorator\InterpolateDecorator::__invoke
     */
    public function testInvokeObject()
    {
        $log = new \Phossa\Logger\LogEntry(
            \Phossa\Logger\LogLevel::INFO,
            '{test} {bingo}',
            array('bingo' => $this)
        );

        call_user_func($this->object, $log);
        $this->assertEquals(
            '{test} OBJECT: Phossa\Logger\Decorator\InterpolateDecoratorTest',
            $log->getMessage()
        );

        $log->setContext('test', new \Exception('test'));
        call_user_func($this->object, $log);
        $this->assertEquals(
            'EXCEPTION: test OBJECT: Phossa\Logger\Decorator\InterpolateDecoratorTest',
            $log->getMessage()
        );
    }
}
